
#include <iostream>
using namespace std;

//---------------------------------------------------------------------------------
//Page 4
//---------------------------------------------------------------------------------

int main_first()
{
    setlocale(LC_ALL, "Russian");
    int a = 30 % 27;
    std::cout << "a = 30 % 27, напечатает 3 :" << a << std::endl;  // напечатает 3

    a = 30 % 10;
    std::cout << "30 % 10, напечатает 0 :" << a << std::endl;  // напечатает 0

    a = 30 % 9;
    std::cout << "30 % 9, напечатает 3 :" << a << "\n" << std::endl;  // напечатает 3

    return 0;
}

int main_second() 
{
    int a = 10, b = 20;
    a++;       // после этой строки а будет 11
    ++a;       // после этой строки а будет 12
    b = a++; // b будет 12, a будет 13
    b = ++a; // b будет 14, а будет 14
    return 0;
}

//---------------------------------------------------------------------------------
//Page 5
//---------------------------------------------------------------------------------

int main_third() 
{
    int a, b = 0;
    int c = 0b0000'1111; // 15, 0xF
    a = b & c;
    std::cout << "Конъюнкция: " << a << std::endl;   // 0
    a = b | c;
    std::cout << "Дизъюнкция: " << a << std::endl;   // 15
    a = b ^ c;
    std::cout << "Сложение по модулю: " << a << std::endl;   // 15
    a = ~c;
    std::cout << "Побитовое НЕ: " << a << std::endl;   // -16 неожиданно?
    a = c << 1;
    std::cout << "Побитовый сдвиг числа: " << a <<"\n" << std::endl;   // 30
    return 0;
}

//---------------------------------------------------------------------------------
//Page 6
//---------------------------------------------------------------------------------

int main_fourth() 
{
    int a = 10, b = 20;
    if (a > 0 && b > 0)       // Если а > 0 и b > 0 то напечатай текст:
    {
        std::cout << "a and b > 0" << std::endl;
    }
    if (a > 0 || b > 0)         // Если а > 0 или b > 0 то напечатай текст:
    {
        std::cout << "a or b > 0" << std::endl;
    }
    if (a != b)                   // Если а не равно b то напечатай текст:
    {
        std::cout << "a is not equal b" << "\n" << std::endl;
    }

    return 0;
}

//---------------------------------------------------------------------------------
//Page 7
//--------------------------------------------------------------------------------- 

int main_fifth() 
{
    int a = 100;
    a = a + 5;  // можно написать короче a += 5;
    a = a - 5;  // можно написать короче a -= 5;
    a = a * 5;  // можно написать короче a *= 5;
    a = a / 5;  // можно написать короче a /= 5;
    a = a & 5;  // можно написать короче a &= 5; (побитовое И)
    a = a << 2;  // можно написать короче a <<= 2; (побитовый сдвиг, умножение на 4)
    return 0;
}

//---------------------------------------------------------------------------------
//Page 8
//---------------------------------------------------------------------------------

int main_six() 
{
    //X = (условие) ? значение1 : значение2;
    int a = 100, b;
    b = (a > 50) ? a : -a;             // b = 100, так как условие истинно (выбирается первое значение)
    std::cout << b << std::endl;
    b = (a > 150) ? a : -a;           // b = -100, так как условие ложно (выбирается второе значение)
    std::cout << b << "\n" << std::endl;
    return 0;
}
//---------------------------------------------------------------------------------
//Page 9
//---------------------------------------------------------------------------------
int main_seven() 
{
    int x, y, * ptr;  // объявляем 3 переменные
    ptr = nullptr;  // инициализируем указатель null, нулевым значением
                         // на всякий случай =)
    x = -7;

    ptr = &x;   // адрес переменной х записываем в переменную ptr

    y = *ptr;   // Записываем в y значение на которое указывает указатель ptr

    *ptr = 3;   // Записываем в ячейку (х) на которую ссылается указатель ptr число 3

    std::cout << "Из темы указатели: " << "x = " << x << " y = " << y << "\n" << std::endl;;  // вывод на экран x = 3 y = -7

    return 0;
}

//---------------------------------------------------------------------------------
//Page 12
//---------------------------------------------------------------------------------
struct Employee {  // Новый тип данных Сотрудник
    long id;                        // ID сотрудника
    unsigned short age;    // его возраст
    double salary;             // его зарплата
};

int main_eight()
{
    Employee em1 = { 1234567, 30, 17'000.0 };   // переменная Сотрудник

    Employee* ptrEm = &em1;    // настроем указатель на переменную em1

    (*ptrEm).age = 31;          // обновим в структуре поле age

    ptrEm->id = 9876543;    // обновим в структуре поле id

    std::cout << "ID сотрудника: " << (*ptrEm).id << std::endl;
    std::cout << "Возраст сотрудника: " << (*ptrEm).age << std::endl;
    std::cout << "Зарплата сотрудника: " << (*ptrEm).salary << "\n" << std::endl;

    return 0;
}

//---------------------------------------------------------------------------------
//Page 13. Указатель на массив
//---------------------------------------------------------------------------------

int main_nine() 
{
    int Array[5], * pArr;

    pArr = &Array[0];  // адрес нулевого элемента сохраняем в указателе pArr
    *pArr = 10;            // изменяем первый элемент массива

    pArr = pArr + 1;    // увеличиваем указатель на 1 (чтоб указывал на 2й элемент массива)
    *pArr = 20;           // изменяем второй элемент массива

    pArr += 1;            // увеличиваем указатель на 1 (чтоб указывал на 3й элемент массива)
    *pArr = 30;           // меняем третий элемент массива

    pArr++;                // увеличиваем указатель на 1 с помощью операции инкремент
    *pArr = 40;          // меняем четвертый элемент массива

    pArr = &Array[4];  // настраиваем на пятый элемент массива
    *pArr = 50;             // меняем пятый элемент массива через указатель

    std::cout << "Элементы массива, полученные с помощью указателей: " << "\n" << Array[0] << endl << Array[1] << endl << Array[2] << endl << Array[3] << endl << Array[4]<< "\n"<< std::endl;
    return 0;
}

//---------------------------------------------------------------------------------
//Page 14. Индексация указателей
//---------------------------------------------------------------------------------

int main_ten() 
{
    int Array[5];
    int* pArr = NULL;  // в старых проектах вы можете встретить NULL при инициализации указателей
                                  // но после стандарта C++11 рекомендуется использовать nullptr

    pArr = &Array[0];  // адрес нулевого элемента сохраняем в указателе pArr
    pArr[0] = 10;          // изменяем первый элемент массива
    pArr[1] = 20;          // изменяем второй элемент массива
    pArr[2] = 30;          // меняем третий элемент массива
    pArr[3] = 40;          // меняем четвертый элемент массива
    pArr[4] = 50;          // меняем пятый элемент массива через указатель

    std::cout << "Индексация указателей: "<< "\n" << Array[0] << endl << Array[1] << endl << Array[2] << endl << Array[3] << endl << Array[4] << "\n" << std::endl;
    return 0;
}

//---------------------------------------------------------------------------------
//Page 17
//---------------------------------------------------------------------------------

int main_eleven()
{
    int a = 1000;
    int& refA = a;  // ссылка на переменную а
    refA = 20;        // изменяем переменную а через ссылку на нее 
                            // не требуется * как с указателями
    std::cout << a << "\n" << std::endl;  // вывод на экран 20
    return 0;
}
//---------------------------------------------------------------------------------
//Page 17
//---------------------------------------------------------------------------------
int main_twelve() 
{
    int a = 77;
    int* ptrA = &a;
    int** ppA = &ptrA;
    *ptrA = 88;
    std::cout << "Вывод указателя на указатель:" << std::endl;
    std::cout << "Первый указатель: " << a << std::endl; // 88
    **ppA = 99;
    std::cout << "Второй указатель: " << a <<"\n" << std::endl; // 99
    return 0;
}

//---------------------------------------------------------------------------------
//Page 19
//---------------------------------------------------------------------------------
int main_thirteen()
{
    int a = 20, b = 30;
    float c = static_cast <float> (b) / a;        // static_cast один из 4 операторов
                                                                    // приведения типа в С++
    std::cout <<"Приведение к типу static_cast <float>: " << c << std::endl;   // вывод на экран 1.5
    return 0;
}

int main_fourteen() 
{
    int a = 20, b = 30;
    float c = float(b) / a;        // или можно вот так (float)b
    std::cout << "Приведение к типу float: " << c << std::endl;                  // вывод на экран 1.5
    return 0;
}

int main()
{
    std::cout << "Hello World!\n";
    main_first();
    main_second();
    main_third();
    main_fourth();
    main_six();
    main_seven();
    main_eight();
    main_nine();
    main_ten();
    main_eleven();
    main_twelve();
    main_thirteen();
    main_fourteen();
}

