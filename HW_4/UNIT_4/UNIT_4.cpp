//-----------------------------------------------------------------------------------------------------
//Page 5, пример if-else
//-----------------------------------------------------------------------------------------------------

#include <iostream>
using namespace std;

int main_First()
{
   
    cout << "Пример if-else: " <<endl;
    cout << "Enter random integer number: " << "\n";
    int a;
    cin >> a;   // Читаем число с клавиатуры
    if (a > 0)  // Если а > 0
    {
        cout << "Your number is greater zero" <<"\n" << endl;;
    }
    else   // Иначе
    {
        cout << "Your number is lower or equal zero" << "\n" << endl;;
    }
    return 0;
}

//-----------------------------------------------------------------------------------------------------
//Page 5, пример каскадного if-else
//-----------------------------------------------------------------------------------------------------

int main_Second()
{
    cout << "Пример каскадного if-else: " << endl;
    cout << "Enter random integer number: ";
    int a;
    cin >> a;   // Читаем число с клавиатуры
    if (a > 0)  // Если а > 0
    {
        cout << "Your number is greater zero" << "\n" << endl;
    }
    else if (a < 0)   // Иначе
    {
        cout << "Your number is lower than zero" << "\n" << endl;
    }
    else if (a == 0)
    {
        cout << "Your number equal zero" << "\n" << endl;
    }
    return 0;
}
//-----------------------------------------------------------------------------------------------------
//Page 7, Оператор множественного выбора: switch - case
//-----------------------------------------------------------------------------------------------------
int main_Third()
{
    char op;
    cout << "Оператор множественного выбора: switch - case: " << endl;;
    cout << "Введите символ арифметической бинарной операции: " << endl;;
    cin >> op;
    switch (op) {
    case '+':
        cout << "Это символ операции сложения."<<"\n" << endl;
        break;
    case '-':
        cout << "Это символ операции вычитания." << "\n" << endl;
        break;
    case '*':
        cout << "Это символ операции умножения." << "\n" << endl;
        break;
    case '/':
        cout << "Это символ операции деления." << "\n" << endl;
        break;
    default:
        cout << "Это что-то исключая * / + -" << "\n" << endl;
    }
    return 0;
}
//-----------------------------------------------------------------------------------------------------
//Page 10, Циклы while и do while
//-----------------------------------------------------------------------------------------------------

int main_Fourth()
{
    int i = -10;
    cout << "Циклы while и do while: " << endl;
    while (i <= 10) // вывод списка чисел с помощью while
    {
        std::cout << i << " " << endl;
        i++;
    }
    std::cout << std::endl << i << std::endl;
    i = -10; // сбрасываем переменную в -10

    do { // вывод списка чисел с помощью do while
        std::cout << i << " "<< endl;;
        i++;
    } while (i <= 10);
    return 0;
}

//-----------------------------------------------------------------------------------------------------
//Page 11, STL тип данных size_t
//-----------------------------------------------------------------------------------------------------
int main_Fifth()
{
    cout << "STL тип данных size_t: " << endl;
    const int size = 10;
    int arr[size] = { 10, 20, 30, 40, 50, 40, 30, 20, 10, -10 };
    int sum = 0; // Здесь будем накапливать сумму
    std::cout << "Cуммирование всех элементов массива: " << endl; 
    for (size_t index = 0; index < size; index++)
    {
        sum += arr[index];
        cout << arr[index] << " " << endl;;
    }
    cout << " sum = " << sum << "\n" << endl;;
    return 0;
}

//-----------------------------------------------------------------------------------------------------
//Page 12, Операторы break и continue
//-----------------------------------------------------------------------------------------------------

int main_Six()
{
    cout << "Операторы break и continue: " << endl;
    for (size_t i = 0; i < 100; i++)
    {
        cout << i << endl;
        if (i == 5)   // если i равна 5
        {
            cout << "i == 5, досрочный выход из цикла";
            break;
        }
        else  // иначе 
        {
            continue; // переход на проверку условия в цикле
            cout << "Этот текст не будет никогда напечатан";
        }
    }
    return 0;
}

//-----------------------------------------------------------------------------------------------------
//Page 13, Range-based for loop
//-----------------------------------------------------------------------------------------------------

int main_Seven()
{

    cout << "Range-based for loop: " << endl;
    int arr[] = { 0, 1, 2, 3, 4, 5, 6, 7 };
    for (int n : arr)    // Переменная n должна быть того же типа что и наш массив arr
    {
        std::cout << n << ' ';
    }
    std::cout << '\n';  // перевод курсора на новую строку через символ \n
    return 0;
}

int main_Eight() 
{
    enum VeryLongDataType { YES, NO, MAYBE };
    VeryLongDataType array[] = { YES, NO, MAYBE, YES, NO, MAYBE, YES, NO, MAYBE };
    for (auto n : array)
    {
        std::cout << n << ' ';   // при выводе элемент enum выводится как int
    }
    std::cout << '\n';
    return 0;
}

//-----------------------------------------------------------------------------------------------------
//Page 15 3 вложенных цикла for
//-----------------------------------------------------------------------------------------------------

int main_Nine()
{
    cout << " 3 вложенных цикла for: " << endl;
    const size_t size = 3;
    int array[size][size][size] = { { {1,2,3}, {4,5,6}, {7,8,9} },
                                    { {1,2,3}, {4,5,6}, {7,8,9} },
                                    { {7,8,1}, {3,4,5}, {6,7,8} } };
    for (size_t i = 0; i < size; i++)
    {
        for (size_t j = 0; j < size; j++)
        {
            for (size_t k = 0; k < size; k++)
            {
                cout << array[i][j][k] << " ";
            }
            cout << endl;
        }
        cout << endl;
    }
    return 0;
}

//-----------------------------------------------------------------------------------------------------
//Page 15 Структурное программирование и оператор goto
//-----------------------------------------------------------------------------------------------------

int main_Ten()
{
    cout << " Структурное программирование и оператор goto: " << endl;
    int i = 0;
    label1:    // метка для перехода с помощью goto
        cout << i++ << endl;
        if (i < 5)             // если i < 5 идем на метку label1
            goto label1;

    cout << "The end of a program";
    return 0;
}

int main()
{
    setlocale(LC_ALL, "Russian");
    main_First();
    main_Second();
    main_Third();
    main_Fourth();
    main_Fifth();
    main_Six();
    main_Seven();
    main_Eight();
    main_Nine();
    main_Ten();
}

